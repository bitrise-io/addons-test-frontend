@mixin font-face($font-family, $font-file-url-without-extension, $font-weight) {
  @font-face {
    font-family: $font-family;
    src: url($font-file-url-without-extension+'.ttf') format('truetype');
    font-weight: $font-weight;
  }
}

@mixin width-above($value) {
  @media (min-width: $value + 1) {
    @content;
  }
}

@mixin width-max($value) {
  @media (max-width: $value) {
    @content;
  }
}

@mixin width-above-screen-medium {
  @include width-above($screen-medium-width) {
    @content;
  }
}

@mixin width-max-screen-medium {
  @include width-max($screen-medium-width) {
    @content;
  }
}

@mixin width-above-screen-small {
  @include width-above($screen-small-width) {
    @content;
  }
}

@mixin width-max-screen-small {
  @include width-max($screen-small-width) {
    @content;
  }
}

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin margin-x($value) {
  margin-left: $value;
  margin-right: $value;
}

@mixin margin-y($value) {
  margin-top: $value;
  margin-bottom: $value;
}

@mixin border-x($value) {
  border-left: $value;
  border-right: $value;
}

@mixin border-y($value) {
  border-top: $value;
  border-bottom: $value;
}

@mixin border-x-color($value) {
  border-left-color: $value;
  border-right-color: $value;
}

@mixin border-y-color($value) {
  border-top-color: $value;
  border-bottom-color: $value;
}

@mixin padding-x($value) {
  padding-left: $value;
  padding-right: $value;
}

@mixin padding-y($value) {
  padding-top: $value;
  padding-bottom: $value;
}

@mixin border-top-radius($value) {
  border-top-left-radius: $value;
  border-top-right-radius: $value;
}

@mixin border-right-radius($value) {
  border-top-right-radius: $value;
  border-bottom-right-radius: $value;
}

@mixin border-bottom-radius($value) {
  border-bottom-left-radius: $value;
  border-bottom-right-radius: $value;
}

@mixin border-left-radius($value) {
  border-top-left-radius: $value;
  border-bottom-left-radius: $value;
}

@mixin ellipsis-oneliner {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}
@mixin position($position: null, $top: null, $right: null, $bottom: null, $left: null) {
  @if ($position) {
    position: $position;
  }

  @if ($top) {
    top: $top;
  }

  @if ($right) {
    right: $right;
  }

  @if ($bottom) {
    bottom: $bottom;
  }

  @if ($left) {
    left: $left;
  }
}
@mixin no-default-focus-styling {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-focus-ring-color: rgba(0, 0, 0, 0);
  outline: none;
}
@mixin transition($values...) {
  @each $value in $values {
    $transform_index: str-index('#{ $value }', 'transform');
    $contains_transform: $transform_index != null;

    @if $contains_transform {
      $additional_parameters: unquote(str-slice('#{ $value }', $transform_index + str-length('transform') + 1));
      transition: -webkit-transform $additional_parameters;
    }

    $flex-shrink_index: str-index('#{ $value }', 'flex-shrink');
    $contains_flex-shrink: $flex-shrink_index != null;

    @if $contains_flex-shrink {
      $additional_parameters: unquote(str-slice('#{ $value }', $flex-shrink_index + str-length('flex-shrink') + 1));
      transition: -webkit-flex-shrink $additional_parameters;
    }
  }

  transition: $values;
}
@mixin transition($values...) {
  @each $value in $values {
    $transform_index: str-index('#{ $value }', 'transform');
    $contains_transform: $transform_index != null;

    @if $contains_transform {
      $additional_parameters: unquote(str-slice('#{ $value }', $transform_index + str-length('transform') + 1));
      -webkit-transition: -webkit-transform $additional_parameters;
      -moz-transition: -moz-transform $additional_parameters;
      -o-transition: -o-transform $additional_parameters;
    }

    $flex-shrink_index: str-index('#{ $value }', 'flex-shrink');
    $contains_flex-shrink: $flex-shrink_index != null;

    @if $contains_flex-shrink {
      $additional_parameters: unquote(str-slice('#{ $value }', $flex-shrink_index + str-length('flex-shrink') + 1));
      -webkit-transition: -webkit-flex-shrink $additional_parameters;
      -moz-transition: -moz-flex-shrink $additional_parameters;
      -o-transition: flex-shrink $additional_parameters;
    }
  }

  -webkit-transition: $values;
  -moz-transition: $values;
  -o-transition: $values;
  transition: $values;
}

@mixin svg-color($color) {
  ::ng-deep svg {
    &,
    & [fill] {
      fill: $color;
    }
  }
}
